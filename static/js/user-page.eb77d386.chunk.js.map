{"version":3,"file":"static/js/user-page.eb77d386.chunk.js","mappings":"wJAAaA,EAAc,WACzB,OAAO,wCACR,C,sHCAYC,EAAuBC,EAAAA,KAAaC,MAAM,CACrDC,YAAaF,EAAAA,KACVG,SAAS,oKACTC,IAAI,EAAG,+RACVC,YAAaL,EAAAA,KACVG,SAAS,kJACTC,IAAI,EAAG,6QACVE,mBAAoBN,EAAAA,KACjBG,SAAS,2GACTI,MAAM,CAACP,EAAAA,GAAQ,eAAgB,MAAO,wHACzCQ,MAAOR,EAAAA,O,8BCXT,GAAgB,YAAc,kCAAkC,UAAY,gCAAgC,aAAe,mCAAmC,gBAAkB,sCAAsC,aAAe,mCAAmC,YAAc,kCAAkC,WAAa,iCAAiC,WAAa,iCAAiC,MAAQ,4BAA4B,gBAAkB,sCAAsC,WAAa,iCAAiC,mBAAqB,yCAAyC,SAAW,gC,oBCOhmB,SAASS,IACd,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbb,YAAa,GACbG,YAAa,GACbC,mBAAoB,IAEtBU,iBAAkBjB,EAClBkB,SAAS,WAAD,wBAAE,WAAMC,GAAN,2FAEAC,EAAW,CACfjB,YAAagB,EAAOhB,YACpBG,YAAaa,EAAOb,aAJhB,UAMAe,EAAAA,EAAAA,IAAeD,GANf,sDAQNE,EAAU,CAAEb,MAAK,OAAC,EAAD,6BAAE,KAAOc,gBAAT,iBAAE,EAAiBC,YAAnB,aAAE,EAAuBC,UARpC,wDAAF,mDAAC,KAYX,EAWIX,EAVFK,OAAUhB,EADZ,EACYA,YAAaG,EADzB,EACyBA,YAAaC,EADtC,EACsCA,mBACpCmB,EASEZ,EATFY,OACAC,EAQEb,EARFa,QACAC,EAOEd,EAPFc,QACAC,EAMEf,EANFe,MACAC,EAKEhB,EALFgB,WACAC,EAIEjB,EAJFiB,aACAC,EAGElB,EAHFkB,aACAC,EAEEnB,EAFFmB,UACAX,EACER,EADFQ,UAEIY,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,+BACE,gBAAKC,UAAWC,EAAAA,YAAhB,UACE,kBAAMrB,SAAUc,EAAhB,WACE,iBAAKM,UAAWC,EAAAA,YAAhB,WACE,iBAAMD,UAAWC,EAAAA,UAAjB,8FACA,4BACE,mBACED,UAAS,UAAKC,EAAAA,aAAL,YAAuBA,EAAAA,iBAChCC,KAAK,SACLC,UAAWb,IAAYC,EAHzB,kFAOA,mBACES,UAAWC,EAAAA,aACXC,KAAK,SACLE,QArBO,WAAO,IAAD,EACzBT,IACAC,EAAS,UAAAE,EAASO,aAAT,SAAgBC,MAAQ,EAAI,SACtC,EAeW,mDASJ,iBAAKN,UAAWC,EAAAA,gBAAhB,WACE,iBAAKD,UAAWC,EAAAA,WAAhB,WACE,kBAAOD,UAAWC,EAAAA,WAAcM,QAAQ,cAAxC,wFAGA,kBACEP,UAAWC,EAAAA,MACXC,KAAM5B,EAAe,OAAS,WAC9BkC,KAAK,cACLC,GAAG,cACHC,YAAY,4EACZC,MAAO9C,EACP+C,SAAUnB,EACVoB,OAAQrB,KAEV,mBACEU,KAAK,SACLE,QAAS,kBAAM7B,GAAiBD,EAAvB,EACT0B,UAAWC,EAAAA,mBAHb,SAKG3B,GACC,SAAC,aAAD,CAAgB0B,UAAWC,EAAAA,YAE3B,SAAC,cAAD,CAAiBD,UAAWC,EAAAA,cAG/Bb,EAAOvB,aAAewB,EAAQxB,cAC7B,mBAAOmC,UAAWC,EAAAA,WAAlB,UACGb,EAAOvB,YADV,IACwBuB,EAAOjB,SAGhCiB,EAAOjB,QACN,kBAAO6B,UAAWC,EAAAA,WAAlB,SAAiCb,EAAOjB,YAG5C,iBAAK6B,UAAWC,EAAAA,WAAhB,WACE,kBAAOD,UAAWC,EAAAA,WAAcM,QAAQ,cAAxC,kFAGA,kBACEP,UAAWC,EAAAA,MACXC,KAAM5B,EAAe,OAAS,WAC9BkC,KAAK,cACLC,GAAG,cACHC,YAAY,sEACZC,MAAO3C,EACP4C,SAAUnB,EACVoB,OAAQrB,KAEV,mBACEU,KAAK,SACLE,QAAS,kBAAM7B,GAAiBD,EAAvB,EACT0B,UAAWC,EAAAA,mBAHb,SAKG3B,GACC,SAAC,aAAD,CAAgB0B,UAAWC,EAAAA,YAE3B,SAAC,cAAD,CAAiBD,UAAWC,EAAAA,cAG/Bb,EAAOpB,aAAeqB,EAAQrB,cAC7B,kBAAOgC,UAAWC,EAAAA,WAAlB,SAAiCb,EAAOpB,kBAG5C,iBAAKgC,UAAWC,EAAAA,WAAhB,WACE,kBAAOD,UAAWC,EAAAA,WAAcM,QAAQ,qBAAxC,yIAGA,kBACEP,UAAWC,EAAAA,MACXC,KAAM5B,EAAe,OAAS,WAC9BkC,KAAK,qBACLC,GAAG,qBACHC,YAAY,6HACZC,MAAO1C,EACP2C,SAAUnB,EACVoB,OAAQrB,KAEV,mBACEU,KAAK,SACLE,QAAS,kBAAM7B,GAAiBD,EAAvB,EACT0B,UAAWC,EAAAA,mBAHb,SAKG3B,GACC,SAAC,aAAD,CAAgB0B,UAAWC,EAAAA,YAE3B,SAAC,cAAD,CAAiBD,UAAWC,EAAAA,cAG/Bb,EAAOnB,oBAAsBoB,EAAQpB,qBACpC,kBAAO+B,UAAWC,EAAAA,WAAlB,SACGb,EAAOnB,iCASzB,C,sHCtKYP,EAAuBC,EAAAA,KAAaC,MAAM,CACrDkD,UAAWnD,EAAAA,KACRoD,IAAI,GAAI,iMACRjD,SAAS,2FACZkD,SAAUrD,EAAAA,KACPoD,IAAI,GAAI,8NACRjD,SAAS,wHACZmD,YAAatD,EAAAA,KACVoD,IAAI,GAAI,2OACRjD,SAAS,qIACZoD,MAAOvD,EAAAA,KACJwD,QAbH,wJAawB,mHACrBrD,SAAS,oFACZsD,MAAOzD,EAAAA,KACJG,SAAS,yHACTiD,IAAI,GAAI,8M,oBCnBb,EAA8B,8BAA9B,EAAwE,4BAAxE,EAAmH,+BAAnH,EAAoK,kCAApK,EAAqN,+BAArN,EAAkQ,8BAAlQ,EAA6S,6BAA7S,EAAuV,6BAAvV,EAA4X,wBAA5X,EAAsa,kCAAta,EAAqd,6BAArd,EAA4f,0B,sECWrf,SAASM,IACd,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MACXlD,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACboC,UAAW,GACXE,SAAU,GACVC,YAAa,GACbC,MAAO,GACPE,MAAO,IAETzC,iBAAkBjB,EAElBkB,SAAS,WAAD,wBAAE,WAAMC,GAAN,6FAEAC,EAAW6C,OAAOC,KAAK/C,GAAQgD,QAAO,SAACC,EAAKC,GAIhD,OAHIlD,EAAOkD,KACTD,EAAIC,GAAOlD,EAAOkD,IAEbD,CACR,GAAE,CAAC,GAPE,SAQaL,GAASO,EAAAA,EAAAA,KAAW,UAAKlD,KARtC,UAS0B,eAD1BmD,EARA,QASGC,KAAKC,cATR,gCAUEV,GAASW,EAAAA,EAAAA,OAAeC,MAC5B,kBAAqC,cAArC,EAAGH,KAAgBC,aAAnB,IAXE,OAc0B,aAA5BF,EAAKC,KAAKC,eACZnD,GAAUsD,EAAAA,EAAAA,IAAkB,UAAKxD,KAf7B,kDAkBNE,EAAU,CAAEb,MAAK,OAAC,EAAD,6BAAE,KAAOc,gBAAT,iBAAE,EAAiBC,YAAnB,aAAE,EAAuBC,UAlBpC,0DAAF,mDAAC,KAsBX,EAaIX,EAZFK,OAAUiC,EADZ,EACYA,UAAWE,EADvB,EACuBA,SAAUC,EADjC,EACiCA,YAAaC,EAD9C,EAC8CA,MAAOE,EADrD,EACqDA,MACnDhC,EAWEZ,EAXFY,OACAC,EAUEb,EAVFa,QACAC,EASEd,EATFc,QACAC,EAQEf,EARFe,MACAC,EAOEhB,EAPFgB,WACAC,EAMEjB,EANFiB,aACA8C,EAKE/D,EALF+D,cACA7C,EAIElB,EAJFkB,aACAC,EAGEnB,EAHFmB,UACAX,EAEER,EAFFQ,UACAwD,EACEhE,EADFgE,WAEFC,EAAAA,EAAAA,YAAU,WAAM,wCACd,yHAEuBhB,GAASW,EAAAA,EAAAA,OAFhC,OAEUlD,EAFV,OAgBUgC,GAZAwB,EAA2B,SAA3BA,EAA4BC,EAAKZ,GACrC,GAAKY,EAAL,CACA,GAAIA,EAAIC,eAAeb,GAAM,OAAOY,EAAIZ,GACxC,IAAK,IAAIc,KAAKF,EACZ,GAAsB,kBAAXA,EAAIE,GAAiB,CAC9B,IAAMC,EAASJ,EAAyBC,EAAIE,GAAId,GAChD,QAAegB,IAAXD,EAAsB,OAAOA,CAClC,CANO,CASX,GAEsC5D,EAAM,UAAY,GACnD4B,EAAY4B,EAAyBxD,EAAM,cAAgB,GAC3D8B,EAAW0B,EAAyBxD,EAAM,aAAe,GACzD+B,EAAcyB,EAAyBxD,EAAM,gBAAkB,GAC/DkC,EAAQsB,EAAyBxD,EAAM,UAAY,GAEzDsD,EAAU,CAAEtB,MAAAA,EAAOJ,UAAAA,EAAWE,SAAAA,EAAUC,YAAAA,EAAaG,MAAAA,IAtBzD,kDAwBI4B,QAAQ7E,MAAR,MAxBJ,2DADc,uBAAC,WAAD,wBA6Bd8E,EACD,GAAE,CAACxB,EAAUe,IAEd,IAAM5C,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAajB,OACE,+BACE,iBAAKC,UAAWC,EAAhB,WACE,kBAAMrB,SAAUc,EAAhB,WACE,iBAAKM,UAAWC,EAAhB,WACE,iBAAMD,UAAWC,EAAjB,wFACA,4BACE,mBACED,UAAS,UAAKC,EAAL,YAAuBA,GAChCC,KAAK,SACLC,UAAWb,IAAYC,EAHzB,kFAOA,mBACES,UAAWC,EACXC,KAAK,SACLE,QAzBO,WAAO,IAAD,EACzBT,IACA,UAAIG,EAASO,aAAb,OAAI,EAAgBC,KAClBV,GAAU,GAEVA,EAAS,SAEZ,EAeW,mDASJ,iBAAKI,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcM,QAAQ,YAAxC,kCAGA,kBACEP,UAAWC,EACXC,KAAK,OACLM,KAAK,YACLC,GAAG,YACHC,YAAY,sBACZC,MAAOG,EACPF,SAAUnB,EACVoB,OAAQrB,IAETJ,EAAO0B,WAAazB,EAAQyB,YAC3B,kBAAOd,UAAWC,EAAlB,SAAiCb,EAAO0B,gBAG5C,iBAAKd,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcM,QAAQ,WAAxC,+DAGA,kBACEP,UAAWC,EACXC,KAAK,OACLM,KAAK,WACLC,GAAG,WACHC,YAAY,mDACZC,MAAOK,EACPJ,SAAUnB,EACVoB,OAAQrB,IAETJ,EAAO4B,UAAY3B,EAAQ2B,WAC1B,kBAAOhB,UAAWC,EAAlB,SAAiCb,EAAO4B,eAG5C,iBAAKhB,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcM,QAAQ,cAAxC,4EAGA,kBACEP,UAAWC,EACXC,KAAK,OACLM,KAAK,cACLC,GAAG,cACHC,YAAY,gEACZC,MAAOM,EACPL,SAAUnB,EACVoB,OAAQrB,IAETJ,EAAO6B,aAAe5B,EAAQ4B,cAC7B,kBAAOjB,UAAWC,EAAlB,SAAiCb,EAAO6B,kBAG5C,iBAAKjB,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcM,QAAQ,QAAxC,yDAGA,SAAC,KAAD,CACE2C,eAAa,EACbC,4BAA4B,EAC5BnD,UAAWC,EACXmD,eAAe,KACf5C,KAAK,QACLC,GAAG,QACHC,YAAY,6CACZC,MAAOS,EACPR,SAvGY,SAAAD,GACxB4B,EAAc,QAAS5B,EACxB,EAsGaE,OAAQrB,EACRrB,MACEiD,GACIiC,EAAAA,EAAAA,IAAmBjC,QACjB2B,EACA,uBACF,0BAGP3D,EAAOgC,OAAS/B,EAAQ+B,QACvB,kBAAOpB,UAAWC,EAAlB,SAAiCb,EAAOgC,YAG5C,iBAAKpB,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcM,QAAQ,QAAxC,oBAGA,kBACEP,UAAWC,EACXC,KAAK,OACLM,KAAK,QACLC,GAAG,QACHC,YAAY,QACZC,MAAOO,EACPN,SAAUnB,EACVoB,OAAQrB,IAETJ,EAAO8B,OAAS7B,EAAQ6B,QACvB,kBAAOlB,UAAWC,EAAlB,SAAiCb,EAAO8B,QAEzC9B,EAAOjB,QACN,kBAAO6B,UAAWC,EAAlB,SAAiCb,EAAOjB,iBAK/CmD,IACC,gBAAKtB,UAAWC,EAAhB,UACE,SAACqD,EAAA,EAAD,UAMX,C,unVClPD,EAA2B,+BAA3B,EAAyE,mCAAzE,EAA4H,oCAA5H,EAAwL,4CAAxL,EAAsP,sCAAtP,EAAqS,6B,UCIxRC,GAAeC,EAAAA,EAAAA,OAC1B,YAOO,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBAEMC,EAAmB,SAAAC,GACM,IAAzBH,EAAcI,QAAgBP,IAAqBM,GCT7B,SAAAA,GAC9B,IAAMP,EAAWS,EAAAA,EAAAA,MACf,SAAAT,GAAQ,OAAIA,EAAShD,KAAOuD,CAApB,IAEV,OAAIP,GAAYA,EAASI,cAChBM,QAAQC,QAAQX,EAASI,eAE3BM,QAAQC,QAAQ,GACxB,CDEOC,CAAiBL,GACd3B,MAAK,SAAAwB,GACJD,EAAiBC,GACjBF,EAAoBK,EACrB,IACAM,OAAM,SAAAnG,GACL6E,QAAQuB,IAAIpG,EACb,GAEN,EAEKqG,EAAWd,IAAqBD,EAAShD,GAE/C,OACE,gBACET,UAAS,UAAKC,EAAL,YAAmBuE,EAAWvE,EAAW,IAElDG,QAAS,kBAAMuD,EAAoB,KAA1B,EAHX,WAKE,SAAC,KAAD,CACE3D,UAAWC,EACXwE,GAAE,IACFrE,QAAS,kBAAM2D,EAAiBN,EAAShD,GAAhC,EAHX,SAKGgD,EAASjD,OAEXgE,IACC,eACEE,IAAKZ,EACL9D,UAAS,UAAKC,EAAL,YAAwBA,GAFnC,SAIG4D,EAAcc,KAAI,SAAAC,GAAW,OAC5B,eAAyB5E,UAAWC,EAApC,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAmBwE,GAAE,IAAtC,SACGG,EAAYpE,QAFRoE,EAAYnE,GADO,QAf7BgD,EAAShD,GA0BnB,IEzDH,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAwG,uBAAxG,EAA6I,6BAA7I,EAA8L,mCCIjLoE,EAAU,WACrB,OAAoCxG,EAAAA,EAAAA,UAAS,IAA7C,eAAOyG,EAAP,KAAmBC,EAAnB,KACA,GAAgD1G,EAAAA,EAAAA,UAAS,MAAzD,eAAOqF,EAAP,KAAyBC,EAAzB,KACA,GAA0CtF,EAAAA,EAAAA,UAAS,IAAnD,eAAOwF,EAAP,KAAsBD,EAAtB,MAEAnB,EAAAA,EAAAA,YAAU,WFPH0B,QAAQC,QAAQF,EAAAA,GESlB7B,MAAK,SAAAyC,GACJC,EAAcD,EACf,IACAR,OAAM,SAAAnG,GACL6E,QAAQuB,IAAIpG,EACb,GACJ,GAAE,IAEH,IAAM6G,GAAWC,EAAAA,EAAAA,QAAO,MAClBnB,GAAmBmB,EAAAA,EAAAA,QAAO,MAE1BC,EAAqB,SAAAC,GAEvBH,EAASI,UACRJ,EAASI,QAAQC,SAASF,EAAEG,SAC7BxB,EAAiBsB,UAChBtB,EAAiBsB,QAAQC,SAASF,EAAEG,SAErC3B,EAAoB,KAEvB,EAUD,OARAlB,EAAAA,EAAAA,YAAU,WAGR,OAFA8C,SAASC,iBAAiB,QAASN,GAE5B,WACLK,SAASE,oBAAoB,QAASP,EACvC,CACF,GAAE,KAGD,mBAAOR,IAAKM,EAAUhF,UAAWC,EAAjC,WACE,gBAAKD,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,uEAEF,gBAAKD,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACG6E,EAAWH,KAAI,SAAAlB,GAAQ,OACtB,SAACF,EAAD,CACEE,SAAUA,EAEVC,iBAAkBA,EAClBC,oBAAqBA,EACrBC,iBAAkBA,EAClBC,cAAeA,EACfC,iBAAkBA,GALbL,EAAShD,GAHM,UAejC,C,0HC/DD,EAAkC,2CAAlC,EAAqF,iC,oBCOxEiF,EAAoB,WAC/B,OACE,+BACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAACf,EAAA,EAAD,KACA,iBAAK7E,UAAWC,EAAhB,WACE,SAACxC,EAAA,EAAD,KACA,eAAIuC,UAAWC,EAAf,gHACA,SAACoB,EAAA,EAAD,KACA,SAACjD,EAAA,EAAD,aAMX,EClBD,EAJiB,WACf,OAAO,SAACsH,EAAD,GACR,C,sGCDYG,EAAmB,SAAC,GAAyB,IAAvB3E,EAAsB,EAAtBA,MAAO4E,EAAe,EAAfA,SAClCC,EAAWvE,EAAAA,GAAoBwE,EAAAA,EAAAA,aAAqB,GACpD5G,EAAS,CAAC,EAahB,OAXK8B,GAAU4E,EAGS,oBAAbC,GACT3G,EAAO8B,MAAQ,2GACf9B,EAAO0G,SAAW,6GAElB1G,EAAO8B,MAAQ,gJACf9B,EAAO0G,SAAW,qJAPlB1G,EAAO8B,MAAQ,2GACf9B,EAAO0G,SAAW,4GASb1G,CACR,EAEYkD,EAAoB,SAAC,GAAe,IAAbpB,EAAY,EAAZA,MAC5B6E,EAAWvE,EAAAA,GAAoBwE,EAAAA,EAAAA,aAAqB,GACpD5G,EAAS,CAAC,EAUhB,OALEA,EAAO8B,MAHJA,EAEmB,oBAAb6E,EACT,+CAA8B7E,EAA9B,mCAEe,gJAJf,+CAA8BA,EAA9B,mCAOK9B,CACR,C","sources":["components/Breadcrumbs/Breadcrumbs.jsx","components/Forms/FormPassword/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormPassword/FormPassword.module.scss?22fd","components/Forms/FormPassword/FormPassword.jsx","components/Forms/FormUser/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormUser/FormUser.module.scss?d6ba","components/Forms/FormUser/FormUser.jsx","webpack://bookstore/./src/components/Sidebar/CategoryItem/CategoryItem.module.scss?9fad","components/Sidebar/CategoryItem/CategoryItem.jsx","services/categories.js","webpack://bookstore/./src/components/Sidebar/Sidebar.module.scss?60bc","components/Sidebar/Sidebar.jsx","webpack://bookstore/./src/components/UserPageComponent/UserPageComponent.module.scss?2492","components/UserPageComponent/UserPageComponent.jsx","pages/UserPage.jsx","utils/handleErrorLogin.js"],"sourcesContent":["export const Breadcrumbs = () => {\n  return <div>Breadcrumbs</div>;\n};\n","import * as Yup from 'yup';\n\nexport const userValidationSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .required(\"Поточний пароль є обов'язковим\")\n    .min(6, 'Поточний пароль повинен містити щонайменше 6 символів'),\n  newPassword: Yup.string()\n    .required(\"Новий пароль є обов'язковим\")\n    .min(6, 'Новий пароль повинен містити щонайменше 6 символів'),\n  confirmNewPassword: Yup.string()\n    .required('Підтвердіть пароль')\n    .oneOf([Yup.ref('newPassword'), null], 'Паролі не співпадають'),\n  error: Yup.string(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormPassword_formWrapper__w5uVr\",\"titleForm\":\"FormPassword_titleForm__cuiAV\",\"buttonSubmit\":\"FormPassword_buttonSubmit__v5HxP\",\"buttonSubmitGap\":\"FormPassword_buttonSubmitGap__yz8tZ\",\"buttonCancel\":\"FormPassword_buttonCancel__19rES\",\"blockButton\":\"FormPassword_blockButton__AlZY3\",\"inputGroup\":\"FormPassword_inputGroup__XsfYA\",\"inputLabel\":\"FormPassword_inputLabel__2xpfc\",\"input\":\"FormPassword_input__1RX2D\",\"inputGroupBlock\":\"FormPassword_inputGroupBlock__NqUVo\",\"errorInput\":\"FormPassword_errorInput__x6eSH\",\"showPasswordButton\":\"FormPassword_showPasswordButton__kobTX\",\"iconShow\":\"FormPassword_iconShow__vUdtX\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { ICONS } from 'assets/icons';\nimport s from './FormPassword.module.scss';\nimport { updatePassword } from 'services/sendFormData';\n\nexport function FormPassword() {\n  const [showPassword, setShowPassword] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      oldPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n    },\n    validationSchema: userValidationSchema,\n    onSubmit: async values => {\n      try {\n        const formData = {\n          oldPassword: values.oldPassword,\n          newPassword: values.newPassword,\n        };\n        await updatePassword(formData);\n      } catch (error) {\n        setErrors({ error: error?.response?.data?.message });\n      }\n    },\n  });\n  const {\n    values: { oldPassword, newPassword, confirmNewPassword },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    resetForm,\n    setErrors,\n  } = formik;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleCancel = () => {\n    resetForm();\n    navigate(location.state?.from ? -1 : '/books');\n  };\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.blockButton}>\n            <span className={s.titleForm}>Змінити пароль</span>\n            <div>\n              <button\n                className={`${s.buttonSubmit} ${s.buttonSubmitGap}`}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                Змінити дані\n              </button>\n              <button\n                className={s.buttonCancel}\n                type=\"button\"\n                onClick={handleCancel}\n              >\n                Вийти\n              </button>\n            </div>\n          </div>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"oldPassword\">\n                Старий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"oldPassword\"\n                id=\"oldPassword\"\n                placeholder=\"Старий пароль\"\n                value={oldPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.oldPassword && touched.oldPassword && (\n                <small className={s.errorInput}>\n                  {errors.oldPassword} {errors.error}\n                </small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"newPassword\">\n                Новий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"newPassword\"\n                id=\"newPassword\"\n                placeholder=\"Новий пароль\"\n                value={newPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.newPassword && touched.newPassword && (\n                <small className={s.errorInput}>{errors.newPassword}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"confirmNewPassword\">\n                Повторіть новий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"confirmNewPassword\"\n                id=\"confirmNewPassword\"\n                placeholder=\"Повторіть новий пароль\"\n                value={confirmNewPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.confirmNewPassword && touched.confirmNewPassword && (\n                <small className={s.errorInput}>\n                  {errors.confirmNewPassword}\n                </small>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import * as Yup from 'yup';\n\nconst emailRegexp =\n  /^[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+(?:\\.[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+)*@([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9]/;\n\nexport const userValidationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .max(20, 'Ім`я повинно бути не більше 20 символів')\n    .required('Введіть ваше ім`я'),\n  lastName: Yup.string()\n    .max(20, 'Прізвище повинно бути не більше 20 символів')\n    .required('Введіть ваше прізвище'),\n  fathersName: Yup.string()\n    .max(20, 'По батькові повинно бути не більше 20 символів')\n    .required('Введіть ваше по батькові'),\n  email: Yup.string()\n    .matches(emailRegexp, 'Введіть коректний email address')\n    .required('Email є обов`язковим'),\n  phone: Yup.string()\n    .required('Телефон є обов`язковим')\n    .max(20, 'Номер повинен бути не більше 20 символів'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormUser_formWrapper__NV4bm\",\"titleForm\":\"FormUser_titleForm__lOAZI\",\"buttonSubmit\":\"FormUser_buttonSubmit__3qUEv\",\"buttonSubmitGap\":\"FormUser_buttonSubmitGap__Pm3OT\",\"buttonCancel\":\"FormUser_buttonCancel__c064h\",\"blockButton\":\"FormUser_blockButton__S7zBc\",\"inputGroup\":\"FormUser_inputGroup__Re50V\",\"inputLabel\":\"FormUser_inputLabel__goyt3\",\"input\":\"FormUser_input__InwTT\",\"inputGroupBlock\":\"FormUser_inputGroupBlock__FcmD6\",\"errorInput\":\"FormUser_errorInput__CaV2+\",\"spinner\":\"FormUser_spinner__PQgDM\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport PhoneInput, { isValidPhoneNumber } from 'react-phone-number-input';\nimport s from './FormUser.module.scss';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeUser, currentUser } from 'redux/operations/operations-user';\nimport { Spinner } from 'components/Spinner';\nimport * as selectors from 'redux/selectors';\nimport { handleErrorChange } from 'utils/handleErrorLogin';\n\nexport function FormUser() {\n  const isLoading = useSelector(selectors.isLoading);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      fathersName: '',\n      email: '',\n      phone: '',\n    },\n    validationSchema: userValidationSchema,\n\n    onSubmit: async values => {\n      try {\n        const formData = Object.keys(values).reduce((acc, key) => {\n          if (values[key]) {\n            acc[key] = values[key];\n          }\n          return acc;\n        }, {});\n        const resp = await dispatch(changeUser({ ...formData }));\n        if (resp.meta.requestStatus === 'fulfilled') {\n          await dispatch(currentUser()).then(\n            ({ meta }) => meta.requestStatus === 'fulfilled'\n          );\n        }\n        if (resp.meta.requestStatus === 'rejected') {\n          setErrors(handleErrorChange({ ...formData }));\n        }\n      } catch (error) {\n        setErrors({ error: error?.response?.data?.message });\n      }\n    },\n  });\n  const {\n    values: { firstName, lastName, fathersName, email, phone },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    setFieldValue,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setValues,\n  } = formik;\n  useEffect(() => {\n    async function getUser() {\n      try {\n        const data = await dispatch(currentUser());\n\n        const getValueFromNestedObject = (obj, key) => {\n          if (!obj) return undefined;\n          if (obj.hasOwnProperty(key)) return obj[key];\n          for (let k in obj) {\n            if (typeof obj[k] === 'object') {\n              const result = getValueFromNestedObject(obj[k], key);\n              if (result !== undefined) return result;\n            }\n          }\n          return undefined;\n        };\n\n        const email = getValueFromNestedObject(data, 'email') || '';\n        const firstName = getValueFromNestedObject(data, 'firstName') || '';\n        const lastName = getValueFromNestedObject(data, 'lastName') || '';\n        const fathersName = getValueFromNestedObject(data, 'fathersName') || '';\n        const phone = getValueFromNestedObject(data, 'phone') || '';\n\n        setValues({ email, firstName, lastName, fathersName, phone });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getUser();\n  }, [dispatch, setValues]);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleChangePhone = value => {\n    setFieldValue('phone', value);\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    if (location.state?.from) {\n      navigate(-1);\n    } else {\n      navigate('/books');\n    }\n  };\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.blockButton}>\n            <span className={s.titleForm}>Особисті дані</span>\n            <div>\n              <button\n                className={`${s.buttonSubmit} ${s.buttonSubmitGap}`}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                Змінити дані\n              </button>\n              <button\n                className={s.buttonCancel}\n                type=\"button\"\n                onClick={handleCancel}\n              >\n                Вийти\n              </button>\n            </div>\n          </div>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"firstName\">\n                Ім`я\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                placeholder=\"Ім`я\"\n                value={firstName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.firstName && touched.firstName && (\n                <small className={s.errorInput}>{errors.firstName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"lastName\">\n                Прізвище\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                placeholder=\"Прізвище\"\n                value={lastName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.lastName && touched.lastName && (\n                <small className={s.errorInput}>{errors.lastName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"fathersName\">\n                По батькові\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"fathersName\"\n                id=\"fathersName\"\n                placeholder=\"По батькові\"\n                value={fathersName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.fathersName && touched.fathersName && (\n                <small className={s.errorInput}>{errors.fathersName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"phone\">\n                Телефон\n              </label>\n              <PhoneInput\n                international\n                countryCallingCodeEditable={false}\n                className={s.input}\n                defaultCountry=\"UA\"\n                name=\"phone\"\n                id=\"phone\"\n                placeholder=\"Телефон\"\n                value={phone}\n                onChange={handleChangePhone}\n                onBlur={handleBlur}\n                error={\n                  phone\n                    ? isValidPhoneNumber(phone)\n                      ? undefined\n                      : 'Invalid phone number'\n                    : 'Phone number required'\n                }\n              />\n              {errors.phone && touched.phone && (\n                <small className={s.errorInput}>{errors.phone}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.email && touched.email && (\n                <small className={s.errorInput}>{errors.email}</small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n          </div>\n        </form>\n        {isLoading && (\n          <div className={s.spinner}>\n            <Spinner />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"CategoryItem_listItem__VYXIw\",\"categoryLink\":\"CategoryItem_categoryLink__BeeYW\",\"subcategories\":\"CategoryItem_subcategories__MxZtE\",\"listItemSubcatigories\":\"CategoryItem_listItemSubcatigories__Vj--g\",\"subcategoryLink\":\"CategoryItem_subcategoryLink__P8uSx\",\"active\":\"CategoryItem_active__Qn3fG\"};","import { Link } from 'react-router-dom';\nimport { getSubcategories } from 'services/categories';\nimport s from './CategoryItem.module.scss';\nimport { memo } from 'react';\n\nexport const CategoryItem = memo(\n  ({\n    category,\n    activeCategoryId,\n    setActiveCategoryId,\n    setSubcategories,\n    subcategories,\n    subcategoriesRef,\n  }) => {\n    const handleMouseEnter = categoryId => {\n      if (subcategories.length === 0 || activeCategoryId !== categoryId) {\n        getSubcategories(categoryId)\n          .then(subcategories => {\n            setSubcategories(subcategories);\n            setActiveCategoryId(categoryId);\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      }\n    };\n\n    const isActive = activeCategoryId === category.id;\n\n    return (\n      <li\n        className={`${s.listItem} ${isActive ? s.active : ''}`}\n        key={category.id}\n        onClick={() => setActiveCategoryId(null)}\n      >\n        <Link\n          className={s.categoryLink}\n          to={`#`}\n          onClick={() => handleMouseEnter(category.id)}\n        >\n          {category.name}\n        </Link>\n        {isActive && (\n          <ul\n            ref={subcategoriesRef}\n            className={`${s.subcategories} ${s.active}`}\n          >\n            {subcategories.map(subcategory => (\n              <li key={subcategory.id} className={s.listItemSubcatigories}>\n                <Link className={s.subcategoryLink} to={`#`}>\n                  {subcategory.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </li>\n    );\n  }\n);\n","import CATEGORIES from './data/categories.json';\n\nexport const getCategories = () => {\n  return Promise.resolve(CATEGORIES.categories);\n};\n\nexport const getSubcategories = categoryId => {\n  const category = CATEGORIES.categories.find(\n    category => category.id === categoryId\n  );\n  if (category && category.subcategories) {\n    return Promise.resolve(category.subcategories);\n  }\n  return Promise.resolve([]);\n};\n\n// import axios from 'axios';\n\n// export const getCategories = () => {\n//   return (\n//     axios\n//       .get('/data/categories.json')\n//       .then(response => response.data.categories)\n//   );\n// };\n\n// export const getSubcategories = categoryId => {\n//   return axios.get('/data/categories.json').then(response => {\n//     const category = response.data.categories.find(\n//       category => category.id === categoryId\n//     );\n//     if (category && category.subcategories) {\n//       return category.subcategories;\n//     }\n//     return [];\n//   });\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"Sidebar_sidebar__S9EbY\",\"titleWrapper\":\"Sidebar_titleWrapper__dNIir\",\"title\":\"Sidebar_title__MRu-G\",\"listWrapper\":\"Sidebar_listWrapper__tarnB\",\"categoriesWrapper\":\"Sidebar_categoriesWrapper__7GAp9\"};","import { useEffect, useRef, useState } from 'react';\nimport { getCategories } from 'services/categories';\nimport { CategoryItem } from './CategoryItem';\nimport s from './Sidebar.module.scss';\n\nexport const Sidebar = () => {\n  const [categories, setCategories] = useState([]);\n  const [activeCategoryId, setActiveCategoryId] = useState(null);\n  const [subcategories, setSubcategories] = useState([]);\n\n  useEffect(() => {\n    getCategories()\n      .then(categories => {\n        setCategories(categories);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const asideRef = useRef(null);\n  const subcategoriesRef = useRef(null);\n\n  const handleClickOutside = e => {\n    if (\n      asideRef.current &&\n      !asideRef.current.contains(e.target) &&\n      subcategoriesRef.current &&\n      !subcategoriesRef.current.contains(e.target)\n    ) {\n      setActiveCategoryId(null);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <aside ref={asideRef} className={s.sidebar}>\n      <div className={s.titleWrapper}>\n        <h2 className={s.title}>Категорії</h2>\n      </div>\n      <div className={s.categoriesWrapper}>\n        <ul className={s.listWrapper}>\n          {categories.map(category => (\n            <CategoryItem\n              category={category}\n              key={category.id}\n              activeCategoryId={activeCategoryId}\n              setActiveCategoryId={setActiveCategoryId}\n              setSubcategories={setSubcategories}\n              subcategories={subcategories}\n              subcategoriesRef={subcategoriesRef}\n            />\n          ))}\n        </ul>\n      </div>\n    </aside>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperPageForm\":\"UserPageComponent_wrapperPageForm__Lb3hv\",\"title\":\"UserPageComponent_title__MAMPR\"};","import { Breadcrumbs } from 'components/Breadcrumbs';\nimport { Container } from 'components/Containers/Container';\nimport { FlexWrapper } from 'components/Containers/FlexWrapper';\nimport { FormUser } from 'components/Forms/FormUser';\nimport { Sidebar } from 'components/Sidebar';\nimport s from './UserPageComponent.module.scss';\nimport { FormPassword } from 'components/Forms/FormPassword';\n\nexport const UserPageComponent = () => {\n  return (\n    <>\n      <Container>\n        <FlexWrapper>\n          <Sidebar />\n          <div className={s.wrapperPageForm}>\n            <Breadcrumbs />\n            <h2 className={s.title}>Особистий кабінет</h2>\n            <FormUser />\n            <FormPassword />\n          </div>\n        </FlexWrapper>\n      </Container>\n    </>\n  );\n};\n","import { UserPageComponent } from 'components/UserPageComponent';\n\nconst UserPage = () => {\n  return <UserPageComponent />;\n};\n\nexport default UserPage;\n","import * as selectors from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport const handleErrorLogin = ({ email, password }) => {\n  const errorMsg = selectors.errorCode(store.getState()) || '';\n  const errors = {};\n\n  if (!email || !password) {\n    errors.email = 'Email або пароль невірні';\n    errors.password = 'Email або пароль невірні';\n  } else if (errorMsg === 'ERR_BAD_REQUEST') {\n    errors.email = 'Email або пароль невірні';\n    errors.password = 'Email або пароль невірні';\n  } else {\n    errors.email = 'Невідома помилка для поля email';\n    errors.password = 'Невідома помилка для поля password';\n  }\n\n  return errors;\n};\n\nexport const handleErrorChange = ({ email }) => {\n  const errorMsg = selectors.errorCode(store.getState()) || '';\n  const errors = {};\n\n  if (!email) {\n    errors.email = `Такий Email ${email} існує`;\n  } else if (errorMsg === 'ERR_BAD_REQUEST') {\n    errors.email = `Такий Email ${email} існує`;\n  } else {\n    errors.email = 'Невідома помилка для поля email';\n  }\n\n  return errors;\n};\n"],"names":["Breadcrumbs","userValidationSchema","Yup","shape","oldPassword","required","min","newPassword","confirmNewPassword","oneOf","error","FormPassword","useState","showPassword","setShowPassword","formik","useFormik","initialValues","validationSchema","onSubmit","values","formData","updatePassword","setErrors","response","data","message","errors","touched","isValid","dirty","handleBlur","handleChange","handleSubmit","resetForm","navigate","useNavigate","location","useLocation","className","s","type","disabled","onClick","state","from","htmlFor","name","id","placeholder","value","onChange","onBlur","firstName","max","lastName","fathersName","email","matches","phone","FormUser","isLoading","useSelector","selectors","dispatch","useDispatch","Object","keys","reduce","acc","key","changeUser","resp","meta","requestStatus","currentUser","then","handleErrorChange","setFieldValue","setValues","useEffect","getValueFromNestedObject","obj","hasOwnProperty","k","result","undefined","console","getUser","international","countryCallingCodeEditable","defaultCountry","isValidPhoneNumber","Spinner","CategoryItem","memo","category","activeCategoryId","setActiveCategoryId","setSubcategories","subcategories","subcategoriesRef","handleMouseEnter","categoryId","length","CATEGORIES","Promise","resolve","getSubcategories","catch","log","isActive","to","ref","map","subcategory","Sidebar","categories","setCategories","asideRef","useRef","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","UserPageComponent","Container","FlexWrapper","handleErrorLogin","password","errorMsg","store"],"sourceRoot":""}