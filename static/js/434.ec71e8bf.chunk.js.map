{"version":3,"file":"static/js/434.ec71e8bf.chunk.js","mappings":"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","sources":["webpack://bookstore/./src/components/Breadcrumbs/Breadcrumbs.module.scss?9366","components/Breadcrumbs/Breadcrumbs.jsx","components/Forms/FormPassword/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormPassword/FormPassword.module.scss?22fd","components/Forms/FormPassword/FormPassword.jsx","components/Forms/FormUser/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormUser/FormUser.module.scss?d6ba","components/Forms/FormUser/FormUser.jsx","constants/pages.js","utils/handleErrorLogin.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Breadcrumbs_container__vetp5\",\"item\":\"Breadcrumbs_item__dxLbb\",\"link\":\"Breadcrumbs_link__v9yGv\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport s from './Breadcrumbs.module.scss';\n\nexport const Breadcrumbs = ({ breadcrumbs }) => {\n  return (\n    breadcrumbs && (\n      <ul className={s.container}>\n        {breadcrumbs.map((item, index) => (\n          <li key={index} className={s.item}>\n            <Link to={item.path} className={s.link}>\n              {item.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n};\n\nBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      path: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import * as Yup from 'yup';\n\nexport const userValidationSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .required(\"пароль є обов'язковим\")\n    .min(6, 'пароль не менше 6 символів'),\n  newPassword: Yup.string()\n    .required(\"Новий пароль є обов'язковим\")\n    .min(6, 'Новий пароль не менше 6 символів'),\n  confirmNewPassword: Yup.string()\n    .required('Підтвердіть пароль')\n    .oneOf([Yup.ref('newPassword'), null], 'Паролі не співпадають'),\n  error: Yup.string(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormPassword_formWrapper__w5uVr\",\"titleForm\":\"FormPassword_titleForm__cuiAV\",\"buttonSubmit\":\"FormPassword_buttonSubmit__v5HxP\",\"buttonSubmitGap\":\"FormPassword_buttonSubmitGap__yz8tZ\",\"buttonCancel\":\"FormPassword_buttonCancel__19rES\",\"blockButton\":\"FormPassword_blockButton__AlZY3\",\"inputGroup\":\"FormPassword_inputGroup__XsfYA\",\"inputLabel\":\"FormPassword_inputLabel__2xpfc\",\"input\":\"FormPassword_input__1RX2D\",\"inputGroupBlock\":\"FormPassword_inputGroupBlock__NqUVo\",\"errorInput\":\"FormPassword_errorInput__x6eSH\",\"showPasswordButton\":\"FormPassword_showPasswordButton__kobTX\",\"iconShow\":\"FormPassword_iconShow__vUdtX\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { ICONS } from 'assets/icons';\nimport s from './FormPassword.module.scss';\n// import { updatePassword } from 'services/sendFormData';\nimport { useDispatch } from 'react-redux';\nimport { changePassword } from 'redux/operations/operations-user';\nimport { handleErrorPass } from 'utils/handleError';\n\nexport function FormPassword() {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      oldPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n    },\n    validationSchema: userValidationSchema,\n    onSubmit: async values => {\n      try {\n        const formData = {\n          oldPassword: values.oldPassword,\n          newPassword: values.newPassword,\n        };\n\n        await dispatch(changePassword(formData)).unwrap();\n      } catch (error) {\n        const msg = error?.code;\n        setErrors(handleErrorPass(msg));\n      }\n    },\n  });\n  const {\n    values: { oldPassword, newPassword, confirmNewPassword },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    resetForm,\n    setErrors,\n  } = formik;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleCancel = () => {\n    resetForm();\n    navigate(location.state?.from ? -1 : '/books');\n  };\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.blockButton}>\n            <span className={s.titleForm}>Змінити пароль</span>\n            <div>\n              <button\n                className={`${s.buttonSubmit} ${s.buttonSubmitGap}`}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                Змінити дані\n              </button>\n              <button\n                className={s.buttonCancel}\n                type=\"button\"\n                onClick={handleCancel}\n              >\n                Вийти\n              </button>\n            </div>\n          </div>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"oldPassword\">\n                Старий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"oldPassword\"\n                id=\"oldPassword\"\n                placeholder=\"Старий пароль\"\n                value={oldPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.oldPassword && touched.oldPassword && (\n                <small className={s.errorInput}>\n                  {errors.oldPassword} {errors.error}\n                </small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"newPassword\">\n                Новий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"newPassword\"\n                id=\"newPassword\"\n                placeholder=\"Новий пароль\"\n                value={newPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.newPassword && touched.newPassword && (\n                <small className={s.errorInput}>{errors.newPassword}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"confirmNewPassword\">\n                Повторіть новий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"confirmNewPassword\"\n                id=\"confirmNewPassword\"\n                placeholder=\"Повторіть новий пароль\"\n                value={confirmNewPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.confirmNewPassword && touched.confirmNewPassword && (\n                <small className={s.errorInput}>\n                  {errors.confirmNewPassword}\n                </small>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import * as Yup from 'yup';\n\nconst emailRegexp =\n  /^[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+(?:\\.[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+)*@([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9]/;\n\nexport const userValidationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .max(20, 'Ім`я повинно бути не більше 20 символів')\n    .required('Введіть ваше ім`я'),\n  lastName: Yup.string()\n    .max(20, 'Прізвище повинно бути не більше 20 символів')\n    .required('Введіть ваше прізвище'),\n  fathersName: Yup.string()\n    .max(20, 'По батькові повинно бути не більше 20 символів')\n    .required('Введіть ваше по батькові'),\n  email: Yup.string()\n    .matches(emailRegexp, 'Введіть коректний email address')\n    .required('Email є обов`язковим'),\n  phone: Yup.string()\n    .required('Телефон є обов`язковим')\n    .max(20, 'Номер повинен бути не більше 20 символів'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormUser_formWrapper__NV4bm\",\"titleForm\":\"FormUser_titleForm__lOAZI\",\"buttonSubmit\":\"FormUser_buttonSubmit__3qUEv\",\"buttonSubmitGap\":\"FormUser_buttonSubmitGap__Pm3OT\",\"buttonCancel\":\"FormUser_buttonCancel__c064h\",\"blockButton\":\"FormUser_blockButton__S7zBc\",\"inputGroup\":\"FormUser_inputGroup__Re50V\",\"inputLabel\":\"FormUser_inputLabel__goyt3\",\"input\":\"FormUser_input__InwTT\",\"inputGroupBlock\":\"FormUser_inputGroupBlock__FcmD6\",\"errorInput\":\"FormUser_errorInput__CaV2+\",\"spinner\":\"FormUser_spinner__PQgDM\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport PhoneInput, { isValidPhoneNumber } from 'react-phone-number-input';\nimport s from './FormUser.module.scss';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeUser, currentUser } from 'redux/operations/operations-user';\nimport { Spinner } from 'components/Spinner';\nimport * as selectors from 'redux/selectors';\nimport { handleErrorChange } from 'utils/handleErrorLogin';\n\nexport function FormUser() {\n  const isLoading = useSelector(selectors.isLoading);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      fathersName: '',\n      email: '',\n      phone: '',\n    },\n    validationSchema: userValidationSchema,\n\n    onSubmit: async values => {\n      try {\n        const formData = Object.keys(values).reduce((acc, key) => {\n          if (values[key]) {\n            acc[key] = values[key];\n          }\n          return acc;\n        }, {});\n        const resp = await dispatch(changeUser({ ...formData }));\n        if (resp.meta.requestStatus === 'fulfilled') {\n          await dispatch(currentUser()).then(\n            ({ meta }) => meta.requestStatus === 'fulfilled'\n          );\n        }\n        if (resp.meta.requestStatus === 'rejected') {\n          setErrors(handleErrorChange({ ...formData }));\n        }\n      } catch (error) {\n        setErrors({ error: error?.response?.data?.message });\n      }\n    },\n  });\n  const {\n    values: { firstName, lastName, fathersName, email, phone },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    setFieldValue,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setValues,\n  } = formik;\n  useEffect(() => {\n    async function getUser() {\n      try {\n        const data = await dispatch(currentUser());\n\n        const getValueFromNestedObject = (obj, key) => {\n          if (!obj) return undefined;\n          if (obj.hasOwnProperty(key)) return obj[key];\n          for (let k in obj) {\n            if (typeof obj[k] === 'object') {\n              const result = getValueFromNestedObject(obj[k], key);\n              if (result !== undefined) return result;\n            }\n          }\n          return undefined;\n        };\n\n        const email = getValueFromNestedObject(data, 'email') || '';\n        const firstName = getValueFromNestedObject(data, 'firstName') || '';\n        const lastName = getValueFromNestedObject(data, 'lastName') || '';\n        const fathersName = getValueFromNestedObject(data, 'fathersName') || '';\n        const phone = getValueFromNestedObject(data, 'phone') || '';\n\n        setValues({ email, firstName, lastName, fathersName, phone });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getUser();\n  }, [dispatch, setValues]);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleChangePhone = value => {\n    setFieldValue('phone', value);\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    if (location.state?.from) {\n      navigate(-1);\n    } else {\n      navigate('/books');\n    }\n  };\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.blockButton}>\n            <span className={s.titleForm}>Особисті дані</span>\n            <div>\n              <button\n                className={`${s.buttonSubmit} ${s.buttonSubmitGap}`}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                Змінити дані\n              </button>\n              <button\n                className={s.buttonCancel}\n                type=\"button\"\n                onClick={handleCancel}\n              >\n                Вийти\n              </button>\n            </div>\n          </div>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"firstName\">\n                Ім`я\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                placeholder=\"Ім`я\"\n                value={firstName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.firstName && touched.firstName && (\n                <small className={s.errorInput}>{errors.firstName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"lastName\">\n                Прізвище\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                placeholder=\"Прізвище\"\n                value={lastName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.lastName && touched.lastName && (\n                <small className={s.errorInput}>{errors.lastName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"fathersName\">\n                По батькові\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"fathersName\"\n                id=\"fathersName\"\n                placeholder=\"По батькові\"\n                value={fathersName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.fathersName && touched.fathersName && (\n                <small className={s.errorInput}>{errors.fathersName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"phone\">\n                Телефон\n              </label>\n              <PhoneInput\n                international\n                countryCallingCodeEditable={false}\n                className={s.input}\n                defaultCountry=\"UA\"\n                name=\"phone\"\n                id=\"phone\"\n                placeholder=\"Телефон\"\n                value={phone}\n                onChange={handleChangePhone}\n                onBlur={handleBlur}\n                error={\n                  phone\n                    ? isValidPhoneNumber(phone)\n                      ? undefined\n                      : 'Invalid phone number'\n                    : 'Phone number required'\n                }\n              />\n              {errors.phone && touched.phone && (\n                <small className={s.errorInput}>{errors.phone}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.email && touched.email && (\n                <small className={s.errorInput}>{errors.email}</small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n          </div>\n        </form>\n        {isLoading && (\n          <div className={s.spinner}>\n            <Spinner />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","export const pages = {\n  HOME: {\n    path: '/books/',\n    name: 'Головна',\n  },\n  ORDER: {\n    path: '/order/',\n    name: 'Оформити замовлення',\n  },\n  PROFILE: {\n    path: '/profile/',\n    name: 'Особистий кабінет',\n  },\n  LOGIN: {\n    path: '/login/',\n    name: 'Сторінка реєстрації',\n  },\n  REGISTER: {\n    path: '/register/',\n    name: 'Сторінка аутентифікації',\n  },\n  BOOK_ADD: {\n    path: '/books/add/',\n    name: 'Додавання книги',\n  },\n  BOOK_EDIT: {\n    path: 'edit/',\n    name: 'Редагування книги',\n  },\n  BOOK_DETAIL: {\n    path: ':id/',\n    name: 'Детальна інформація',\n  },\n};\n","import * as selectors from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport const handleErrorLogin = ({ email, password }) => {\n  const errorMsg = selectors.errorCode(store.getState()) || '';\n  const errors = {};\n\n  if (!email || !password) {\n    errors.email = 'Email або пароль невірні';\n    errors.password = 'Email або пароль невірні';\n  } else if (errorMsg === 'ERR_BAD_REQUEST') {\n    errors.email = 'Email або пароль невірні';\n    errors.password = 'Email або пароль невірні';\n  } else {\n    errors.email = 'Невідома помилка для поля email';\n    errors.password = 'Невідома помилка для поля password';\n  }\n\n  return errors;\n};\n\nexport const handleErrorChange = ({ email }) => {\n  const errorMsg = selectors.errorCode(store.getState()) || '';\n  const errors = {};\n\n  if (!email) {\n    errors.email = `Такий Email ${email} існує`;\n  } else if (errorMsg === 'ERR_BAD_REQUEST') {\n    errors.email = `Такий Email ${email} існує`;\n  } else {\n    errors.email = 'Невідома помилка для поля email';\n  }\n\n  return errors;\n};\n"],"names":["Breadcrumbs","breadcrumbs","className","s","map","item","index","to","path","name","userValidationSchema","Yup","shape","oldPassword","required","min","newPassword","confirmNewPassword","oneOf","error","FormPassword","useState","showPassword","setShowPassword","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","formData","changePassword","unwrap","msg","code","setErrors","handleErrorPass","errors","touched","isValid","dirty","handleBlur","handleChange","handleSubmit","resetForm","navigate","useNavigate","location","useLocation","type","disabled","onClick","state","from","htmlFor","id","placeholder","value","onChange","onBlur","firstName","max","lastName","fathersName","email","matches","phone","FormUser","isLoading","useSelector","selectors","Object","keys","reduce","acc","key","changeUser","resp","meta","requestStatus","currentUser","then","handleErrorChange","response","data","message","setFieldValue","setValues","useEffect","getValueFromNestedObject","obj","hasOwnProperty","k","result","undefined","console","getUser","international","countryCallingCodeEditable","defaultCountry","isValidPhoneNumber","Spinner","pages","HOME","ORDER","PROFILE","LOGIN","REGISTER","BOOK_ADD","BOOK_EDIT","BOOK_DETAIL","handleErrorLogin","password","errorMsg","store"],"sourceRoot":""}