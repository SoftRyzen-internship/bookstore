{"version":3,"file":"static/js/434.44cae344.chunk.js","mappings":"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","sources":["webpack://bookstore/./src/components/Breadcrumbs/Breadcrumbs.module.scss?9366","components/Breadcrumbs/Breadcrumbs.jsx","components/Forms/FormPassword/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormPassword/FormPassword.module.scss?22fd","components/Forms/FormPassword/FormPassword.jsx","components/Forms/FormUser/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormUser/FormUser.module.scss?d6ba","components/Forms/FormUser/FormUser.jsx","constants/pages.js","utils/handleErrorLogin.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Breadcrumbs_container__vetp5\",\"item\":\"Breadcrumbs_item__dxLbb\",\"link\":\"Breadcrumbs_link__v9yGv\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport s from './Breadcrumbs.module.scss';\n\nexport const Breadcrumbs = ({ breadcrumbs }) => {\n  return (\n    breadcrumbs && (\n      <ul className={s.container}>\n        {breadcrumbs.map((item, index) => (\n          <li key={index} className={s.item}>\n            <Link to={item.path} className={s.link}>\n              {item.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n};\n\nBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      path: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import * as Yup from 'yup';\n\nexport const userValidationSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .required(\"Поточний пароль є обов'язковим\")\n    .min(6, 'Поточний пароль повинен містити щонайменше 6 символів'),\n  newPassword: Yup.string()\n    .required(\"Новий пароль є обов'язковим\")\n    .min(6, 'Новий пароль повинен містити щонайменше 6 символів'),\n  confirmNewPassword: Yup.string()\n    .required('Підтвердіть пароль')\n    .oneOf([Yup.ref('newPassword'), null], 'Паролі не співпадають'),\n  error: Yup.string(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormPassword_formWrapper__w5uVr\",\"titleForm\":\"FormPassword_titleForm__cuiAV\",\"buttonSubmit\":\"FormPassword_buttonSubmit__v5HxP\",\"buttonSubmitGap\":\"FormPassword_buttonSubmitGap__yz8tZ\",\"buttonCancel\":\"FormPassword_buttonCancel__19rES\",\"blockButton\":\"FormPassword_blockButton__AlZY3\",\"inputGroup\":\"FormPassword_inputGroup__XsfYA\",\"inputLabel\":\"FormPassword_inputLabel__2xpfc\",\"input\":\"FormPassword_input__1RX2D\",\"inputGroupBlock\":\"FormPassword_inputGroupBlock__NqUVo\",\"errorInput\":\"FormPassword_errorInput__x6eSH\",\"showPasswordButton\":\"FormPassword_showPasswordButton__kobTX\",\"iconShow\":\"FormPassword_iconShow__vUdtX\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { ICONS } from 'assets/icons';\nimport s from './FormPassword.module.scss';\nimport { updatePassword } from 'services/sendFormData';\n\nexport function FormPassword() {\n  const [showPassword, setShowPassword] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      oldPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n    },\n    validationSchema: userValidationSchema,\n    onSubmit: async values => {\n      try {\n        const formData = {\n          oldPassword: values.oldPassword,\n          newPassword: values.newPassword,\n        };\n        await updatePassword(formData);\n      } catch (error) {\n        setErrors({ error: error?.response?.data?.message });\n      }\n    },\n  });\n  const {\n    values: { oldPassword, newPassword, confirmNewPassword },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    resetForm,\n    setErrors,\n  } = formik;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleCancel = () => {\n    resetForm();\n    navigate(location.state?.from ? -1 : '/books');\n  };\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.blockButton}>\n            <span className={s.titleForm}>Змінити пароль</span>\n            <div>\n              <button\n                className={`${s.buttonSubmit} ${s.buttonSubmitGap}`}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                Змінити дані\n              </button>\n              <button\n                className={s.buttonCancel}\n                type=\"button\"\n                onClick={handleCancel}\n              >\n                Вийти\n              </button>\n            </div>\n          </div>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"oldPassword\">\n                Старий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"oldPassword\"\n                id=\"oldPassword\"\n                placeholder=\"Старий пароль\"\n                value={oldPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.oldPassword && touched.oldPassword && (\n                <small className={s.errorInput}>\n                  {errors.oldPassword} {errors.error}\n                </small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"newPassword\">\n                Новий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"newPassword\"\n                id=\"newPassword\"\n                placeholder=\"Новий пароль\"\n                value={newPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.newPassword && touched.newPassword && (\n                <small className={s.errorInput}>{errors.newPassword}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"confirmNewPassword\">\n                Повторіть новий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"confirmNewPassword\"\n                id=\"confirmNewPassword\"\n                placeholder=\"Повторіть новий пароль\"\n                value={confirmNewPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.confirmNewPassword && touched.confirmNewPassword && (\n                <small className={s.errorInput}>\n                  {errors.confirmNewPassword}\n                </small>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import * as Yup from 'yup';\n\nconst emailRegexp =\n  /^[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+(?:\\.[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+)*@([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9]/;\n\nexport const userValidationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .max(20, 'Ім`я повинно бути не більше 20 символів')\n    .required('Введіть ваше ім`я'),\n  lastName: Yup.string()\n    .max(20, 'Прізвище повинно бути не більше 20 символів')\n    .required('Введіть ваше прізвище'),\n  fathersName: Yup.string()\n    .max(20, 'По батькові повинно бути не більше 20 символів')\n    .required('Введіть ваше по батькові'),\n  email: Yup.string()\n    .matches(emailRegexp, 'Введіть коректний email address')\n    .required('Email є обов`язковим'),\n  phone: Yup.string()\n    .required('Телефон є обов`язковим')\n    .max(20, 'Номер повинен бути не більше 20 символів'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormUser_formWrapper__NV4bm\",\"titleForm\":\"FormUser_titleForm__lOAZI\",\"buttonSubmit\":\"FormUser_buttonSubmit__3qUEv\",\"buttonSubmitGap\":\"FormUser_buttonSubmitGap__Pm3OT\",\"buttonCancel\":\"FormUser_buttonCancel__c064h\",\"blockButton\":\"FormUser_blockButton__S7zBc\",\"inputGroup\":\"FormUser_inputGroup__Re50V\",\"inputLabel\":\"FormUser_inputLabel__goyt3\",\"input\":\"FormUser_input__InwTT\",\"inputGroupBlock\":\"FormUser_inputGroupBlock__FcmD6\",\"errorInput\":\"FormUser_errorInput__CaV2+\",\"spinner\":\"FormUser_spinner__PQgDM\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport PhoneInput, { isValidPhoneNumber } from 'react-phone-number-input';\nimport s from './FormUser.module.scss';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeUser, currentUser } from 'redux/operations/operations-user';\nimport { Spinner } from 'components/Spinner';\nimport * as selectors from 'redux/selectors';\nimport { handleErrorChange } from 'utils/handleErrorLogin';\n\nexport function FormUser() {\n  const isLoading = useSelector(selectors.isLoading);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      fathersName: '',\n      email: '',\n      phone: '',\n    },\n    validationSchema: userValidationSchema,\n\n    onSubmit: async values => {\n      try {\n        const formData = Object.keys(values).reduce((acc, key) => {\n          if (values[key]) {\n            acc[key] = values[key];\n          }\n          return acc;\n        }, {});\n        const resp = await dispatch(changeUser({ ...formData }));\n        if (resp.meta.requestStatus === 'fulfilled') {\n          await dispatch(currentUser()).then(\n            ({ meta }) => meta.requestStatus === 'fulfilled'\n          );\n        }\n        if (resp.meta.requestStatus === 'rejected') {\n          setErrors(handleErrorChange({ ...formData }));\n        }\n      } catch (error) {\n        setErrors({ error: error?.response?.data?.message });\n      }\n    },\n  });\n  const {\n    values: { firstName, lastName, fathersName, email, phone },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    setFieldValue,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setValues,\n  } = formik;\n  useEffect(() => {\n    async function getUser() {\n      try {\n        const data = await dispatch(currentUser());\n\n        const getValueFromNestedObject = (obj, key) => {\n          if (!obj) return undefined;\n          if (obj.hasOwnProperty(key)) return obj[key];\n          for (let k in obj) {\n            if (typeof obj[k] === 'object') {\n              const result = getValueFromNestedObject(obj[k], key);\n              if (result !== undefined) return result;\n            }\n          }\n          return undefined;\n        };\n\n        const email = getValueFromNestedObject(data, 'email') || '';\n        const firstName = getValueFromNestedObject(data, 'firstName') || '';\n        const lastName = getValueFromNestedObject(data, 'lastName') || '';\n        const fathersName = getValueFromNestedObject(data, 'fathersName') || '';\n        const phone = getValueFromNestedObject(data, 'phone') || '';\n\n        setValues({ email, firstName, lastName, fathersName, phone });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getUser();\n  }, [dispatch, setValues]);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleChangePhone = value => {\n    setFieldValue('phone', value);\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    if (location.state?.from) {\n      navigate(-1);\n    } else {\n      navigate('/books');\n    }\n  };\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.blockButton}>\n            <span className={s.titleForm}>Особисті дані</span>\n            <div>\n              <button\n                className={`${s.buttonSubmit} ${s.buttonSubmitGap}`}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                Змінити дані\n              </button>\n              <button\n                className={s.buttonCancel}\n                type=\"button\"\n                onClick={handleCancel}\n              >\n                Вийти\n              </button>\n            </div>\n          </div>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"firstName\">\n                Ім`я\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                placeholder=\"Ім`я\"\n                value={firstName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.firstName && touched.firstName && (\n                <small className={s.errorInput}>{errors.firstName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"lastName\">\n                Прізвище\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                placeholder=\"Прізвище\"\n                value={lastName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.lastName && touched.lastName && (\n                <small className={s.errorInput}>{errors.lastName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"fathersName\">\n                По батькові\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"fathersName\"\n                id=\"fathersName\"\n                placeholder=\"По батькові\"\n                value={fathersName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.fathersName && touched.fathersName && (\n                <small className={s.errorInput}>{errors.fathersName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"phone\">\n                Телефон\n              </label>\n              <PhoneInput\n                international\n                countryCallingCodeEditable={false}\n                className={s.input}\n                defaultCountry=\"UA\"\n                name=\"phone\"\n                id=\"phone\"\n                placeholder=\"Телефон\"\n                value={phone}\n                onChange={handleChangePhone}\n                onBlur={handleBlur}\n                error={\n                  phone\n                    ? isValidPhoneNumber(phone)\n                      ? undefined\n                      : 'Invalid phone number'\n                    : 'Phone number required'\n                }\n              />\n              {errors.phone && touched.phone && (\n                <small className={s.errorInput}>{errors.phone}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.email && touched.email && (\n                <small className={s.errorInput}>{errors.email}</small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n          </div>\n        </form>\n        {isLoading && (\n          <div className={s.spinner}>\n            <Spinner />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","export const pages = {\n  HOME: {\n    path: '/books/',\n    name: 'Головна',\n  },\n  ORDER: {\n    path: '/order/',\n    name: 'Оформити замовлення',\n  },\n  PROFILE: {\n    path: '/profile/',\n    name: 'Особистий кабінет',\n  },\n  LOGIN: {\n    path: '/login/',\n    name: 'Сторінка реєстрації',\n  },\n  REGISTER: {\n    path: '/register/',\n    name: 'Сторінка аутентифікації',\n  },\n  BOOK_ADD: {\n    path: '/books/add/',\n    name: 'Додавання книги',\n  },\n  BOOK_EDIT: {\n    path: 'edit/',\n    name: 'Редагування книги',\n  },\n  BOOK_DETAIL: {\n    path: ':id/',\n    name: 'Детальна інформація',\n  },\n};\n","import * as selectors from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport const handleErrorLogin = ({ email, password }) => {\n  const errorMsg = selectors.errorCode(store.getState()) || '';\n  const errors = {};\n\n  if (!email || !password) {\n    errors.email = 'Email або пароль невірні';\n    errors.password = 'Email або пароль невірні';\n  } else if (errorMsg === 'ERR_BAD_REQUEST') {\n    errors.email = 'Email або пароль невірні';\n    errors.password = 'Email або пароль невірні';\n  } else {\n    errors.email = 'Невідома помилка для поля email';\n    errors.password = 'Невідома помилка для поля password';\n  }\n\n  return errors;\n};\n\nexport const handleErrorChange = ({ email }) => {\n  const errorMsg = selectors.errorCode(store.getState()) || '';\n  const errors = {};\n\n  if (!email) {\n    errors.email = `Такий Email ${email} існує`;\n  } else if (errorMsg === 'ERR_BAD_REQUEST') {\n    errors.email = `Такий Email ${email} існує`;\n  } else {\n    errors.email = 'Невідома помилка для поля email';\n  }\n\n  return errors;\n};\n"],"names":["Breadcrumbs","breadcrumbs","className","s","map","item","index","to","path","name","userValidationSchema","Yup","shape","oldPassword","required","min","newPassword","confirmNewPassword","oneOf","error","FormPassword","useState","showPassword","setShowPassword","formik","useFormik","initialValues","validationSchema","onSubmit","values","formData","updatePassword","setErrors","response","data","message","errors","touched","isValid","dirty","handleBlur","handleChange","handleSubmit","resetForm","navigate","useNavigate","location","useLocation","type","disabled","onClick","state","from","htmlFor","id","placeholder","value","onChange","onBlur","firstName","max","lastName","fathersName","email","matches","phone","FormUser","isLoading","useSelector","selectors","dispatch","useDispatch","Object","keys","reduce","acc","key","changeUser","resp","meta","requestStatus","currentUser","then","handleErrorChange","setFieldValue","setValues","useEffect","getValueFromNestedObject","obj","hasOwnProperty","k","result","undefined","console","getUser","international","countryCallingCodeEditable","defaultCountry","isValidPhoneNumber","Spinner","pages","HOME","ORDER","PROFILE","LOGIN","REGISTER","BOOK_ADD","BOOK_EDIT","BOOK_DETAIL","handleErrorLogin","password","errorMsg","store"],"sourceRoot":""}