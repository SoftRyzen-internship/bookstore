{"version":3,"file":"static/js/order-page.f0960134.chunk.js","mappings":"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","sources":["components/Forms/FormLogin/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormLogin/FormLogin.module.scss?9dfa","components/Forms/FormLogin/FormLogin.jsx","webpack://bookstore/./src/components/OrderPageComponent/OrderPageComponent.module.scss?b3fd","webpack://bookstore/./src/components/ClientInfoPageComponent/ClientInfoPageComponent.module.scss?5418","components/ClientInfoPageComponent/ClientInfoPageComponent.jsx","components/OrderPageComponent/OrderPageComponent.jsx","pages/OrderPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst emailRegexp =\n  /^[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+(?:\\.[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+)*@([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9]/;\n\nexport const userValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(emailRegexp, 'Введіть коректний email address')\n    .required('Email є обов`язковим'),\n  password: Yup.string()\n    .required(\"Пароль є обов'язковим\")\n    .min(6, 'Пароль повинен бути не менше 6 символів'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormLogin_formWrapper__MoR9m\",\"buttonSubmit\":\"FormLogin_buttonSubmit__hUEtG\",\"buttonSubmitGap\":\"FormLogin_buttonSubmitGap__dCX3g\",\"buttonCancel\":\"FormLogin_buttonCancel__z0EFc\",\"blockButton\":\"FormLogin_blockButton__37reB\",\"inputGroup\":\"FormLogin_inputGroup__HmQxn\",\"inputLabel\":\"FormLogin_inputLabel__nHSSY\",\"input\":\"FormLogin_input__0g-56\",\"inputGroupBlock\":\"FormLogin_inputGroupBlock__6KT7q\",\"errorInput\":\"FormLogin_errorInput__lOfS7\",\"showPasswordButton\":\"FormLogin_showPasswordButton__tcUAH\",\"iconShow\":\"FormLogin_iconShow__lYJLc\",\"wrapperLock\":\"FormLogin_wrapperLock__Fjke9\",\"lockLink\":\"FormLogin_lockLink__HOptD\",\"spinner\":\"FormLogin_spinner__PiQCS\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\n\nimport { ICONS } from 'assets/icons';\nimport s from './FormLogin.module.scss';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { currentUser, loginUser } from 'redux/operations/operations-user';\nimport { Spinner } from 'components/Spinner';\nimport * as selectors from 'redux/selectors';\nimport { handleErrorLogin } from 'utils/handleErrorLogin';\n\nexport function FormLogin() {\n  const [showPassword, setShowPassword] = useState(false);\n  const isLoading = useSelector(selectors.isLoading);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: userValidationSchema,\n\n    onSubmit: async values => {\n      try {\n        const formData = Object.keys(values).reduce((acc, key) => {\n          if (values[key]) {\n            acc[key] = values[key];\n          }\n          return acc;\n        }, {});\n        const resp = await dispatch(loginUser({ ...formData }));\n        if (resp.meta.requestStatus === 'fulfilled') {\n          await dispatch(currentUser()).then(\n            ({ meta }) => meta.requestStatus === 'fulfilled'\n          );\n        }\n        if (resp.meta.requestStatus === 'rejected') {\n          setErrors(handleErrorLogin({ ...formData }));\n        }\n      } catch (error) {\n        setErrors({ error: error?.response?.data?.message });\n      }\n    },\n  });\n  const {\n    values: { email, password },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setErrors,\n  } = formik;\n\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.email && touched.email && (\n                <small className={s.errorInput}>{errors.email}</small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"password\">\n                Пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Старий пароль\"\n                value={password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.password && touched.password && (\n                <small className={s.errorInput}>\n                  {errors.password} {errors.error}\n                </small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n          </div>\n          <div className={s.wrapperLock}>\n            <ICONS.LOCK className={s.iconLock} />\n            <Link to=\"#\" className={s.lockLink}>\n              Забули пароль?\n            </Link>\n          </div>\n          <div className={s.blockButton}>\n            <button\n              className={`${s.buttonSubmit}`}\n              type=\"submit\"\n              disabled={!isValid && !dirty}\n            >\n              Увійти\n            </button>\n          </div>\n        </form>\n        {isLoading && (\n          <div className={s.spinner}>\n            <Spinner />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperPageForm\":\"OrderPageComponent_wrapperPageForm__3YY1X\",\"blockWrapper\":\"OrderPageComponent_blockWrapper__5LCl0\",\"title\":\"OrderPageComponent_title__UdfG2\",\"wrapperpageActive\":\"OrderPageComponent_wrapperpageActive__uJffw\",\"blockpageActive\":\"OrderPageComponent_blockpageActive__IpgDL\",\"titleWrapper\":\"OrderPageComponent_titleWrapper__NZefa\",\"titleForm\":\"OrderPageComponent_titleForm__1IYfm\",\"pageActive\":\"OrderPageComponent_pageActive__zyQnl\",\"activeLink\":\"OrderPageComponent_activeLink__+IylA\",\"inactiveLink\":\"OrderPageComponent_inactiveLink__i2cqP\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ClientInfoPageComponent_wrapper__kA2pz\",\"infoWrapper\":\"ClientInfoPageComponent_infoWrapper__r9Ccw\",\"iconInfo\":\"ClientInfoPageComponent_iconInfo__gmxQF\",\"wrapperButtonChange\":\"ClientInfoPageComponent_wrapperButtonChange__H3IN8\",\"groupIcon\":\"ClientInfoPageComponent_groupIcon__Puznh\",\"textSpan\":\"ClientInfoPageComponent_textSpan__0Mbpj\"};","import { useLocation, useNavigate } from 'react-router-dom';\nimport { ICONS } from 'assets/icons';\nimport s from './ClientInfoPageComponent.module.scss';\nimport { routesPath } from 'router/routesPath';\nimport * as selectors from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nexport function ClientInfoPageComponent() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const getUserFirstName = useSelector(selectors.getUserFirstName);\n  const getUserLastName = useSelector(selectors.getUserLastName);\n  const getUserFathersName = useSelector(selectors.getUserFathersName);\n  const getUserEmail = useSelector(selectors.getUserEmail);\n  const getUserPhone = useSelector(selectors.getUserPhone);\n  const handleButton = e => {\n    e.preventDefault();\n    navigate('/' + routesPath.PROFILE, {\n      state: {\n        from: location,\n      },\n    });\n  };\n  return (\n    <>\n      <div className={s.wrapper}>\n        <div className={s.infoWrapper}>\n          <ul className={s.blockSpan}>\n            <li className={s.groupIcon}>\n              <ICONS.USER className={s.iconInfo} />\n              <span className={s.textSpan}>\n                {getUserFirstName} {getUserLastName} {getUserFathersName}\n              </span>\n            </li>\n            <li className={s.groupIcon}>\n              <ICONS.EMAIL className={s.iconInfo} />\n              <span className={s.textSpan}>{getUserEmail}</span>\n            </li>\n            <li className={s.groupIcon}>\n              <ICONS.CALL className={s.iconInfo} />\n              <span className={s.textSpan}>{getUserPhone}</span>\n            </li>\n          </ul>\n          <div>\n            <div className={s.wrapperButtonChange}>\n              <button\n                onClick={handleButton}\n                className={`${s.buttonChange}`}\n                type=\"submit\"\n              >\n                <ICONS.EDIT className={s.iconEdit} />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport { Breadcrumbs } from 'components/Breadcrumbs';\nimport { Container } from 'components/Containers/Container';\nimport { FlexWrapper } from 'components/Containers/FlexWrapper';\nimport s from './OrderPageComponent.module.scss';\nimport { FormLogin } from 'components/Forms/FormLogin';\nimport { OrderForm } from 'components/Forms';\nimport * as selectors from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ClientInfoPageComponent } from 'components/ClientInfoPageComponent';\nimport { useEffect } from 'react';\nimport { currentUser } from 'redux/operations/operations-user';\n\nexport const OrderPageComponent = () => {\n  const isAuth = useSelector(selectors.getIsAuth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function getCurrentUser() {\n      await dispatch(currentUser());\n    }\n    if (isAuth) {\n      getCurrentUser();\n    }\n  }, [dispatch, isAuth]);\n\n  return (\n    <>\n      <Container>\n        <FlexWrapper>\n          <div className={s.wrapperPageForm}>\n            <Breadcrumbs />\n            <h2 className={s.title}>Оформлення замовлення</h2>\n            <div className={s.blockWrapper}>\n              <div className={s.titleWrapper}>\n                <span className={s.titleForm}>Особисті дані</span>\n              </div>\n              <div className={s.wrapperpageActive}>\n                <div className={s.blockpageActive}>\n                  {isAuth ? (\n                    <NavLink\n                      className={({ isActive }) =>\n                        isActive\n                          ? `${s.pageActive} ${s.activeLink}`\n                          : `${s.pageActive} ${s.inactiveLink}`\n                      }\n                      to=\"/order\"\n                    >\n                      Новий покупець\n                    </NavLink>\n                  ) : (\n                    <NavLink\n                      className={({ isActive }) =>\n                        isActive\n                          ? `${s.pageActive} ${s.activeLink}`\n                          : `${s.pageActive} ${s.inactiveLink}`\n                      }\n                      to=\"/register\"\n                    >\n                      Новий покупець\n                    </NavLink>\n                  )}\n                </div>\n                <div className={s.blockpageActive}>\n                  <NavLink\n                    onClick={isAuth ? e => e.preventDefault() : null}\n                    className={({ isActive }) =>\n                      isActive\n                        ? `${s.pageActive} ${s.activeLink}`\n                        : `${s.pageActive} ${s.inactiveLink}`\n                    }\n                    to=\"/login\"\n                  >\n                    Постійний клієнт\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n            {isAuth ? <ClientInfoPageComponent /> : <FormLogin />}\n            <OrderForm />\n          </div>\n        </FlexWrapper>\n      </Container>\n    </>\n  );\n};\n","import { OrderPageComponent } from 'components/OrderPageComponent';\n\nconst OrderPage = () => {\n  return <OrderPageComponent />;\n};\n\nexport default OrderPage;\n"],"names":["userValidationSchema","Yup","shape","email","matches","required","password","min","FormLogin","useState","showPassword","setShowPassword","isLoading","useSelector","selectors","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","formData","Object","keys","reduce","acc","key","loginUser","resp","meta","requestStatus","currentUser","then","setErrors","handleErrorLogin","error","response","data","message","errors","touched","isValid","dirty","handleBlur","handleChange","handleSubmit","className","s","htmlFor","type","name","id","placeholder","value","onChange","onBlur","onClick","to","disabled","Spinner","ClientInfoPageComponent","navigate","useNavigate","location","useLocation","getUserFirstName","getUserLastName","getUserFathersName","getUserEmail","getUserPhone","e","preventDefault","routesPath","state","from","OrderPageComponent","isAuth","useEffect","getCurrentUser","Container","FlexWrapper","Breadcrumbs","isActive"],"sourceRoot":""}