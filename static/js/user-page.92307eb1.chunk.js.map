{"version":3,"file":"static/js/user-page.92307eb1.chunk.js","mappings":"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","sources":["components/Breadcrumbs/Breadcrumbs.jsx","webpack://bookstore/./src/components/Sidebar/CategoryItem/CategoryItem.module.scss?9fad","components/Sidebar/CategoryItem/CategoryItem.jsx","services/categories.js","webpack://bookstore/./src/components/Sidebar/Sidebar.module.scss?60bc","components/Sidebar/Sidebar.jsx","components/Forms/FormUser/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormUser/FormUser.module.scss?d6ba","components/Forms/FormUser/FormUser.jsx","webpack://bookstore/./src/components/UserPageComponent/UserPageComponent.module.scss?2492","components/Forms/FormPassword/userValidationSchema.jsx","webpack://bookstore/./src/components/Forms/FormPassword/FormPassword.module.scss?22fd","components/Forms/FormPassword/FormPassword.jsx","components/UserPageComponent/UserPageComponent.jsx","pages/UserPage.jsx"],"sourcesContent":["export const Breadcrumbs = () => {\n  return <div>Breadcrumbs</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"CategoryItem_listItem__VYXIw\",\"categoryLink\":\"CategoryItem_categoryLink__BeeYW\",\"subcategories\":\"CategoryItem_subcategories__MxZtE\",\"listItemSubcatigories\":\"CategoryItem_listItemSubcatigories__Vj--g\",\"subcategoryLink\":\"CategoryItem_subcategoryLink__P8uSx\",\"active\":\"CategoryItem_active__Qn3fG\"};","import { Link } from 'react-router-dom';\nimport { getSubcategories } from 'services/categories';\nimport s from './CategoryItem.module.scss';\n\nexport const CategoryItem = ({\n  category,\n  activeCategoryId,\n  setActiveCategoryId,\n  setSubcategories,\n  subcategories,\n  subcategoriesRef,\n}) => {\n  const handleMouseEnter = categoryId => {\n    if (subcategories.length === 0 || activeCategoryId !== categoryId) {\n      getSubcategories(categoryId)\n        .then(subcategories => {\n          setSubcategories(subcategories);\n          setActiveCategoryId(categoryId);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  };\n\n  const isActive = activeCategoryId === category.id;\n\n  return (\n    <li\n      className={`${s.listItem} ${isActive ? s.active : ''}`}\n      key={category.id}\n      onClick={() => setActiveCategoryId(null)}\n    >\n      <Link\n        className={s.categoryLink}\n        to={`#`}\n        onClick={() => handleMouseEnter(category.id)}\n      >\n        {category.name}\n      </Link>\n      {isActive && (\n        <ul ref={subcategoriesRef} className={`${s.subcategories} ${s.active}`}>\n          {subcategories.map(subcategory => (\n            <li key={subcategory.id} className={s.listItemSubcatigories}>\n              <Link className={s.subcategoryLink} to={`#`}>\n                {subcategory.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n","import CATEGORIES from './data/categories.json';\n\nexport const getCategories = () => {\n  return Promise.resolve(CATEGORIES.categories);\n};\n\nexport const getSubcategories = categoryId => {\n  const category = CATEGORIES.categories.find(\n    category => category.id === categoryId\n  );\n  if (category && category.subcategories) {\n    return Promise.resolve(category.subcategories);\n  }\n  return Promise.resolve([]);\n};\n\n// import axios from 'axios';\n\n// export const getCategories = () => {\n//   return (\n//     axios\n//       .get('/data/categories.json')\n//       .then(response => response.data.categories)\n//   );\n// };\n\n// export const getSubcategories = categoryId => {\n//   return axios.get('/data/categories.json').then(response => {\n//     const category = response.data.categories.find(\n//       category => category.id === categoryId\n//     );\n//     if (category && category.subcategories) {\n//       return category.subcategories;\n//     }\n//     return [];\n//   });\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"Sidebar_sidebar__S9EbY\",\"titleWrapper\":\"Sidebar_titleWrapper__dNIir\",\"title\":\"Sidebar_title__MRu-G\",\"listWrapper\":\"Sidebar_listWrapper__tarnB\",\"categoriesWrapper\":\"Sidebar_categoriesWrapper__7GAp9\"};","import { useEffect, useRef, useState } from 'react';\nimport { getCategories } from 'services/categories';\nimport { CategoryItem } from './CategoryItem';\nimport s from './Sidebar.module.scss';\n\nexport const Sidebar = () => {\n  const [categories, setCategories] = useState([]);\n  const [activeCategoryId, setActiveCategoryId] = useState(null);\n  const [subcategories, setSubcategories] = useState([]);\n\n  useEffect(() => {\n    getCategories()\n      .then(categories => {\n        setCategories(categories);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const asideRef = useRef(null);\n  const subcategoriesRef = useRef(null);\n\n  const handleClickOutside = e => {\n    if (\n      asideRef.current &&\n      !asideRef.current.contains(e.target) &&\n      subcategoriesRef.current &&\n      !subcategoriesRef.current.contains(e.target)\n    ) {\n      setActiveCategoryId(null);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <aside ref={asideRef} className={s.sidebar}>\n      <div className={s.titleWrapper}>\n        <h2 className={s.title}>Категорії</h2>\n      </div>\n      <div className={s.categoriesWrapper}>\n        <ul className={s.listWrapper}>\n          {categories.map(category => (\n            <CategoryItem\n              category={category}\n              key={category.id}\n              activeCategoryId={activeCategoryId}\n              setActiveCategoryId={setActiveCategoryId}\n              setSubcategories={setSubcategories}\n              subcategories={subcategories}\n              subcategoriesRef={subcategoriesRef}\n            />\n          ))}\n        </ul>\n      </div>\n    </aside>\n  );\n};\n","import * as Yup from 'yup';\n\nconst emailRegexp =\n  /^[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+(?:\\.[-!#$%&'*+/=?^_`{|}~A-Za-z0-9]+)*@([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9]/;\n\nexport const userValidationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .max(20, 'Ім`я повинно бути не більше 20 символів')\n    .required('Введіть ваше ім`я'),\n  lastName: Yup.string()\n    .max(20, 'Прізвище повинно бути не більше 20 символів')\n    .required('Введіть ваше прізвище'),\n  fathersName: Yup.string()\n    .max(20, 'По батькові повинно бути не більше 20 символів')\n    .required('Введіть ваше по батькові'),\n  email: Yup.string()\n    .matches(emailRegexp, 'Invalid email address')\n    .required('Email is required'),\n  phone: Yup.string()\n    .required('Phone is required')\n    .max(20, 'Номер повинен бути не більше 20 символів'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormUser_formWrapper__NV4bm\",\"titleForm\":\"FormUser_titleForm__lOAZI\",\"buttonSubmit\":\"FormUser_buttonSubmit__3qUEv\",\"buttonSubmitGap\":\"FormUser_buttonSubmitGap__Pm3OT\",\"buttonCancel\":\"FormUser_buttonCancel__c064h\",\"blockButton\":\"FormUser_blockButton__S7zBc\",\"inputGroup\":\"FormUser_inputGroup__Re50V\",\"inputLabel\":\"FormUser_inputLabel__goyt3\",\"input\":\"FormUser_input__InwTT\",\"inputGroupBlock\":\"FormUser_inputGroupBlock__FcmD6\",\"errorInput\":\"FormUser_errorInput__CaV2+\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { currentUser, sendFormData } from 'services/sendFormData';\nimport PhoneInput, { isValidPhoneNumber } from 'react-phone-number-input';\nimport s from './FormUser.module.scss';\nimport 'react-phone-number-input/style.css';\nimport { useEffect } from 'react';\n\nexport function FormUser() {\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      fathersName: '',\n      email: '',\n      phone: '',\n    },\n    validationSchema: userValidationSchema,\n\n    onSubmit: async values => {\n      try {\n        const formData = Object.keys(values).reduce((acc, key) => {\n          if (values[key]) {\n            acc[key] = values[key];\n          }\n          return acc;\n        }, {});\n        await sendFormData({ ...formData, phone });\n      } catch (error) {\n        setErrors({ error: error?.response?.data?.message });\n      }\n    },\n  });\n  const {\n    values: { firstName, lastName, fathersName, email, phone },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    setFieldValue,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setValues,\n  } = formik;\n  useEffect(() => {\n    async function getUser() {\n      try {\n        const currentUserData = await currentUser();\n        const { data } = currentUserData;\n\n        const getValueFromNestedObject = (obj, key) => {\n          if (!obj) return undefined;\n          if (obj.hasOwnProperty(key)) return obj[key];\n          for (let k in obj) {\n            if (typeof obj[k] === 'object') {\n              const result = getValueFromNestedObject(obj[k], key);\n              if (result !== undefined) return result;\n            }\n          }\n          return undefined;\n        };\n\n        const email = getValueFromNestedObject(data, 'email') || '';\n        const firstName = getValueFromNestedObject(data, 'firstName') || '';\n        const lastName = getValueFromNestedObject(data, 'lastName') || '';\n        const fathersName = getValueFromNestedObject(data, 'fathersName') || '';\n        const phone = getValueFromNestedObject(data, 'phone') || '';\n\n        setValues({ email, firstName, lastName, fathersName, phone });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getUser();\n  }, [setValues]);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleChangePhone = value => {\n    setFieldValue('phone', value);\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    if (location.state?.from) {\n      navigate(-1);\n    } else {\n      navigate('/books');\n    }\n  };\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.blockButton}>\n            <span className={s.titleForm}>Особисті дані</span>\n            <div>\n              <button\n                className={`${s.buttonSubmit} ${s.buttonSubmitGap}`}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                Змінити дані\n              </button>\n              <button\n                className={s.buttonCancel}\n                type=\"button\"\n                onClick={handleCancel}\n              >\n                Вийти\n              </button>\n            </div>\n          </div>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"firstName\">\n                Ім`я\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                placeholder=\"Ім`я\"\n                value={firstName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.firstName && touched.firstName && (\n                <small className={s.errorInput}>{errors.firstName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"lastName\">\n                Прізвище\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                placeholder=\"Прізвище\"\n                value={lastName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.lastName && touched.lastName && (\n                <small className={s.errorInput}>{errors.lastName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"fathersName\">\n                По батькові\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"fathersName\"\n                id=\"fathersName\"\n                placeholder=\"По батькові\"\n                value={fathersName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.fathersName && touched.fathersName && (\n                <small className={s.errorInput}>{errors.fathersName}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"phone\">\n                Телефон\n              </label>\n              <PhoneInput\n                international\n                countryCallingCodeEditable={false}\n                className={s.input}\n                defaultCountry=\"UA\"\n                name=\"phone\"\n                id=\"phone\"\n                placeholder=\"Телефон\"\n                value={phone}\n                onChange={handleChangePhone}\n                onBlur={handleBlur}\n                error={\n                  phone\n                    ? isValidPhoneNumber(phone)\n                      ? undefined\n                      : 'Invalid phone number'\n                    : 'Phone number required'\n                }\n              />\n              {errors.phone && touched.phone && (\n                <small className={s.errorInput}>{errors.phone}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.email && touched.email && (\n                <small className={s.errorInput}>{errors.email}</small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperPageForm\":\"UserPageComponent_wrapperPageForm__Lb3hv\",\"title\":\"UserPageComponent_title__MAMPR\"};","import * as Yup from 'yup';\n\nexport const userValidationSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .required(\"Поточний пароль є обов'язковим\")\n    .min(6, 'Поточний пароль повинен містити щонайменше 6 символів'),\n  newPassword: Yup.string()\n    .required(\"Новий пароль є обов'язковим\")\n    .min(6, 'Новий пароль повинен містити щонайменше 6 символів'),\n  confirmNewPassword: Yup.string()\n    .required(\"Підтвердження нового пароля є обов'язковим\")\n    .oneOf([Yup.ref('newPassword'), null], 'Паролі не співпадають'),\n  error: Yup.string(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"FormPassword_formWrapper__w5uVr\",\"titleForm\":\"FormPassword_titleForm__cuiAV\",\"buttonSubmit\":\"FormPassword_buttonSubmit__v5HxP\",\"buttonSubmitGap\":\"FormPassword_buttonSubmitGap__yz8tZ\",\"buttonCancel\":\"FormPassword_buttonCancel__19rES\",\"blockButton\":\"FormPassword_blockButton__AlZY3\",\"inputGroup\":\"FormPassword_inputGroup__XsfYA\",\"inputLabel\":\"FormPassword_inputLabel__2xpfc\",\"input\":\"FormPassword_input__1RX2D\",\"inputGroupBlock\":\"FormPassword_inputGroupBlock__NqUVo\",\"errorInput\":\"FormPassword_errorInput__x6eSH\",\"showPasswordButton\":\"FormPassword_showPasswordButton__kobTX\",\"iconShow\":\"FormPassword_iconShow__vUdtX\"};","import { useFormik } from 'formik';\nimport { userValidationSchema } from './userValidationSchema';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { ICONS } from 'assets/icons';\nimport s from './FormPassword.module.scss';\nimport 'react-phone-number-input/style.css';\nimport { updatePassword } from 'services/sendFormData';\n\nexport function FormPassword() {\n  const [showPassword, setShowPassword] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      oldPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n    },\n    validationSchema: userValidationSchema,\n    onSubmit: async values => {\n      try {\n        const formData = {\n          oldPassword: values.oldPassword,\n          newPassword: values.newPassword,\n        };\n        await updatePassword(formData);\n      } catch (error) {\n        setErrors({ error: error?.response?.data?.message });\n      }\n    },\n  });\n  const {\n    values: { oldPassword, newPassword, confirmNewPassword },\n    errors,\n    touched,\n    isValid,\n    dirty,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    resetForm,\n    setErrors,\n  } = formik;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleCancel = () => {\n    resetForm();\n    navigate(location.state?.from ? -1 : '/books');\n  };\n  return (\n    <>\n      <div className={s.formWrapper}>\n        <form onSubmit={handleSubmit}>\n          <div className={s.blockButton}>\n            <span className={s.titleForm}>Змінити пароль</span>\n            <div>\n              <button\n                className={`${s.buttonSubmit} ${s.buttonSubmitGap}`}\n                type=\"submit\"\n                disabled={!isValid && !dirty}\n              >\n                Змінити дані\n              </button>\n              <button\n                className={s.buttonCancel}\n                type=\"button\"\n                onClick={handleCancel}\n              >\n                Вийти\n              </button>\n            </div>\n          </div>\n          <div className={s.inputGroupBlock}>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"oldPassword\">\n                Старий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"oldPassword\"\n                id=\"oldPassword\"\n                placeholder=\"Старий пароль\"\n                value={oldPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.oldPassword && touched.oldPassword && (\n                <small className={s.errorInput}>\n                  {errors.oldPassword} {errors.error}\n                </small>\n              )}\n              {errors.error && (\n                <small className={s.errorInput}>{errors.error}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"newPassword\">\n                Новий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"newPassword\"\n                id=\"newPassword\"\n                placeholder=\"Новий пароль\"\n                value={newPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.newPassword && touched.newPassword && (\n                <small className={s.errorInput}>{errors.newPassword}</small>\n              )}\n            </div>\n            <div className={s.inputGroup}>\n              <label className={s.inputLabel} htmlFor=\"confirmNewPassword\">\n                Повторіть новий пароль\n              </label>\n              <input\n                className={s.input}\n                type={showPassword ? 'text' : 'password'}\n                name=\"confirmNewPassword\"\n                id=\"confirmNewPassword\"\n                placeholder=\"Повторіть новий пароль\"\n                value={confirmNewPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className={s.showPasswordButton}\n              >\n                {showPassword ? (\n                  <ICONS.SHOWPASS className={s.iconShow} />\n                ) : (\n                  <ICONS.CLOSEPASS className={s.iconClose} />\n                )}\n              </button>\n              {errors.confirmNewPassword && touched.confirmNewPassword && (\n                <small className={s.errorInput}>\n                  {errors.confirmNewPassword}\n                </small>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import { Breadcrumbs } from 'components/Breadcrumbs';\nimport { Container } from 'components/Containers/Container';\nimport { FlexWrapper } from 'components/Containers/FlexWrapper';\nimport { FormUser } from 'components/Forms/FormUser';\nimport { Sidebar } from 'components/Sidebar';\nimport s from './UserPageComponent.module.scss';\nimport { FormPassword } from 'components/Forms/FormPassword';\n\nexport const UserPageComponent = () => {\n  return (\n    <>\n      <Container>\n        <FlexWrapper>\n          <Sidebar />\n          <div className={s.wrapperPageForm}>\n            <Breadcrumbs />\n            <h2 className={s.title}>Особистий кабінет</h2>\n            <FormUser />\n            <FormPassword />\n          </div>\n        </FlexWrapper>\n      </Container>\n    </>\n  );\n};\n","import { UserPageComponent } from 'components/UserPageComponent';\n\nconst UserPage = () => {\n  return <UserPageComponent />;\n};\n\nexport default UserPage;\n"],"names":["Breadcrumbs","CategoryItem","category","activeCategoryId","setActiveCategoryId","setSubcategories","subcategories","subcategoriesRef","handleMouseEnter","categoryId","length","CATEGORIES","id","Promise","resolve","getSubcategories","then","catch","error","console","log","isActive","className","s","onClick","to","name","ref","map","subcategory","Sidebar","useState","categories","setCategories","useEffect","asideRef","useRef","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","userValidationSchema","Yup","shape","firstName","max","required","lastName","fathersName","email","matches","phone","FormUser","formik","useFormik","initialValues","validationSchema","onSubmit","values","formData","Object","keys","reduce","acc","key","sendFormData","setErrors","response","data","message","errors","touched","isValid","dirty","handleBlur","handleChange","setFieldValue","handleSubmit","resetForm","setValues","currentUser","currentUserData","getValueFromNestedObject","obj","hasOwnProperty","k","result","undefined","getUser","navigate","useNavigate","location","useLocation","type","disabled","state","from","htmlFor","placeholder","value","onChange","onBlur","international","countryCallingCodeEditable","defaultCountry","isValidPhoneNumber","oldPassword","min","newPassword","confirmNewPassword","oneOf","FormPassword","showPassword","setShowPassword","updatePassword","UserPageComponent","Container","FlexWrapper"],"sourceRoot":""}